#!/usr/bin/env python3

"""
üê± CyberKitty Pyrogram Session Creator
=====================================

–ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Pyrogram —Å–µ—Å—Å–∏–π.
–†–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º.

–í–µ—Ä—Å–∏—è: 1.0.0

–ê–≤—Ç–æ—Ä: –ö–æ–º–∞–Ω–¥–∞ CyberKitty üêæ
GitHub: https://github.com/videlboga/pyrogram_session_creator
"""

import os
import sys
import random
from pathlib import Path

def meow():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –º—è—É–∫–∞–Ω—å–µ üê±"""
    meows = ["üê± –ú—è—É!", "üêæ –ú—Ä—Ä—Ä~", "üò∏ –ú—è—è—è—É!", "üê± –ú—É—Ä-–º—É—Ä!", "üòª –ú—è–≤!", "üêæ –ú—Ä—Ä—Ä—è—É!"]
    return random.choice(meows)


def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import pyrogram
        print(f"{meow()} Pyrogram –Ω–∞–π–¥–µ–Ω!")
        return True
    except ImportError:
        print(f"‚ùå {meow()} –û—à–∏–±–∫–∞: Pyrogram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π: pip install pyrogram")
        print("üí° –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ç–∞–∫–∂–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install tgcrypto")
        return False

def print_banner():
    """–í—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Å–∏–≤—ã–π –±–∞–Ω–Ω–µ—Ä"""
    print("\n" + "üîê" + "="*60)
    print("   CYBERKITTY PYROGRAM SESSION CREATOR v1.0.0")
    print("   –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–π Telegram –±—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ—Å—Ç–æ")
    print("="*62)
    print()

def get_api_credentials():
    """–ü–æ–ª—É—á–∞–µ—Ç API credentials –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ"""
    print("üìã –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ –Ω—É–∂–Ω—ã API –¥–∞–Ω–Ω—ã–µ:")
    print("   1. –ò–¥–∏—Ç–µ –Ω–∞ https://my.telegram.org/apps")
    print("   2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    print("   3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ API ID –∏ API Hash")
    print()
    
    while True:
        api_id = input("üîë –í–≤–µ–¥–∏—Ç–µ API ID: ").strip()
        if api_id.isdigit():
            api_id = int(api_id)
            break
        else:
            print("‚ùå API ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!")
    
    while True:
        api_hash = input("üîë –í–≤–µ–¥–∏—Ç–µ API Hash: ").strip()
        if len(api_hash) == 32 and all(c in '0123456789abcdef' for c in api_hash.lower()):
            break
        else:
            print("‚ùå API Hash –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 32-—Å–∏–º–≤–æ–ª—å–Ω–æ–π hex —Å—Ç—Ä–æ–∫–æ–π!")
    
    return api_id, api_hash

def get_session_details():
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ —Å–µ—Å—Å–∏–∏"""
    print()
    session_name = input("üìù –ò–º—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏ (–±–µ–∑ .session): ").strip()
    if not session_name:
        session_name = "my_telegram_session"
    
    # –£–±–∏—Ä–∞–µ–º .session –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ
    if session_name.endswith('.session'):
        session_name = session_name[:-8]
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    current_dir = os.getcwd()
    print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
    save_here = input("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é –∑–¥–µ—Å—å? (Y/n): ").strip().lower()
    
    if save_here in ['n', 'no', '–Ω–µ—Ç']:
        output_dir = input("üìÇ –í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ").strip()
        if not output_dir:
            output_dir = current_dir
    else:
        output_dir = current_dir
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    Path(output_dir).mkdir(parents=True, exist_ok=True)
    
    session_path = os.path.join(output_dir, session_name)
    
    return session_path

def create_session_interactive(api_id, api_hash, session_path):
    """–°–æ–∑–¥–∞–µ—Ç —Å–µ—Å—Å–∏—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ"""
    from pyrogram import Client
    
    print()
    print("üöÄ –ù–∞—á–∏–Ω–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏...")
    print("üì± –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ Telegram...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        app = Client(
            session_path,
            api_id=api_id,
            api_hash=api_hash
        )
        
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        print("üì≤ –°–µ–π—á–∞—Å –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram...")
        print()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        with app:
            me = app.get_me()
            
            print()
            print("üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} {me.last_name or ''}")
            if me.username:
                print(f"üîó Username: @{me.username}")
            print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone_number}")
            print()
            
            session_file = f"{session_path}.session"
            print(f"üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {session_file}")
            
            if os.path.exists(session_file):
                size = os.path.getsize(session_file)
                print(f"üìä –†–∞–∑–º–µ—Ä: {size:,} –±–∞–π—Ç")
            
            print()
            print("‚ú® –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Å—Å–∏—é –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö:")
            print(f'   app = Client("{session_path}")')
            
            print(f"{meow()} Pyrogram –Ω–∞–π–¥–µ–Ω!")
        return True
            
    except KeyboardInterrupt:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def cleanup_on_failure(session_path):
    """–û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª—ã –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ"""
    files_to_remove = [
        f"{session_path}.session",
        f"{session_path}.session-shm",
        f"{session_path}.session-wal"
    ]
    
    for file_path in files_to_remove:
        if os.path.exists(file_path):
            try:
                os.remove(file_path)
                print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω: {file_path}")
            except:
                pass

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not check_dependencies():
        sys.exit(1)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º API –¥–∞–Ω–Ω—ã–µ
        api_id, api_hash = get_api_credentials()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Å–µ—Å—Å–∏–∏
        session_path = get_session_details()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        session_file = f"{session_path}.session"
        if os.path.exists(session_file):
            print(f"‚ö†Ô∏è  –§–∞–π–ª {session_file} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            overwrite = input("üîÑ –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): ").strip().lower()
            if overwrite not in ['y', 'yes', '–¥–∞']:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                return
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
        success = create_session_interactive(api_id, api_hash, session_path)
        
        if success:
            print("üéä –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        else:
            cleanup_on_failure(session_path)
            print("üí• –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é")
            
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 